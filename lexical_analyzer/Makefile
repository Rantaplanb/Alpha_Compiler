# Makefile for the alphac lexical analyzer.
# The default build is with flex.
# To build the custom implementation make target <custom_an>

CC = gcc
CFLAGS = -Wall -pedantic

LEX_AN_TESTS = ids keywords integers floats punctuations operators strings comments
BUILD_DIR = ../bin
TESTS_DIR = ./test_files
LIBS_DIR = ./libs

.PHONY: default flex_an flex_scanner custom_an libs tests clean distclean


default: flex_an


# Build the flex implementation of the lexical analyzer
flex_an: libs
	@mkdir -p $(BUILD_DIR)
	@cd ./flex_scanner/ && flex --outfile=scanner.c scanner.l
	@printf "\n-> scanner.h and scanner.c files successfully generated by flex"
	@$(CC) -ggdb3 -o $(BUILD_DIR)/al flex_scanner/scanner.c $(LIBS_DIR)/*.o
	@printf "\n-> flex implementation of lex_an successfully built in /bin\n\n"


# Build the custom implementation of the lexical analyzer
custom_an: custom_scanner/custom_scanner.o libs
	@mkdir -p $(BUILD_DIR)
	@$(CC) $(CFLAGS) -o $(BUILD_DIR)/al $< $(LIBS_DIR)/*.o
	@printf "\n-> custom implementation of lex_an successfully built in /bin\n\n"

custom_scanner/custom_scanner.o: custom_scanner/custom_scanner.c
	@$(CC) $(CFLAGS) -ggdb3 -c $^ -o $@


# Build the libs
libs: $(LIBS_DIR)/comment_stack.o $(LIBS_DIR)/token_queue.o

$(LIBS_DIR)/%.o: $(LIBS_DIR)/%.c $(LIBS_DIR)/%.h
	@$(CC) $(CFLAGS) -ggdb3 -c $< -o $@


# Tests
tests: $(LEX_AN_TESTS)

$(LEX_AN_TESTS): $(BUILD_DIR)/al
	@printf "Test $@ \n--------------------------------\n"
	@cat -n $(TESTS_DIR)/$@.txt
	@printf "\nResults:\n--------------------------------\n"
	@$(BUILD_DIR)/al $(TESTS_DIR)/$@.txt
	@printf "\n\n"


# Valgrind memcheck test
memcheck: $(BUILD_DIR)/al
	@valgrind --leak-check=full \
	         --show-leak-kinds=definite,indirect,possible,reachable \
	         --track-origins=yes \
	         --verbose \
	         --log-file=memcheck.out \
	         $(BUILD_DIR)/al $(TESTS_DIR)/all.txt > /dev/null
	@printf "\n-> Valgrind memcheck log file (memcheck.out) generated\n\n"


# Formatting
format:
	@find . -name "*.[ch]" | xargs clang-format -style=file -i


# Cleaning stuff
clean:
	@find . -name "*~" | xargs rm -f
	@rm -f $(BUILD_DIR)/al memcheck.out
	@clear

distclean: clean
	@rm -f  $(LIBS_DIR)/*.o flex_scanner/*.o custom_scanner/*.o
	@cd ./flex_scanner/ && rm -f scanner.c scanner.h
	@clear
